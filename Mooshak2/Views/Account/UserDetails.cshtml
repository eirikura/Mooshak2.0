@model Mooshak2.Models.ViewModel.UserCreateEditViewModel

@{
    ViewBag.Title = "UserDetails";
}

<h2>Users Details</h2>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.username)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.fullName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fullName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.phoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.phoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.role)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.r)
        </dd>

    </dl>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Change details:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userID)

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> roleList = new List<SelectListItem>();
                roleList.Add(new SelectListItem
                {
                    Text = "Admin",
                    Value = "Admin",
                    Selected = true
                });
                roleList.Add(new SelectListItem
                {
                    Text = "Teacher",
                    Value = "Teacher",
                });
                roleList.Add(new SelectListItem
                {
                    Text = "Student",
                    Value = "Student"
                });
            }
            @Html.DropDownListFor(m => m.Role, roleList, "-- Select Status --")       
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<p>
    @Html.ActionLink("Back to List", "Index")
</p>
